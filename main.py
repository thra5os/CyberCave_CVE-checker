# This is a sample Python script.
from os import *
import tkinter as tk
import requests
import pandas as pd

import seaborn as sns
from mitrecve import crawler
from pprint import pprint

# Press Maj+F10 to execute it or replace it with your code.
# Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.
'''
"DisplayName,""Publisher"",""InstallDate"",""DisplayVersion"""
"Visual Studio Build Tools 2019,""Microsoft Corporation"",""20240130"",""16.11.33"""
"Brave,""Brave Software Inc"",""20240307"",""122.1.63.169"""
,,,
"Foxit PDF Reader,""Foxit Software Inc."",""20240129"",""2023.3.0.23028"""
"IntelliJ IDEA 2023.3.3,""JetBrains s.r.o."",,""233.14015.106"""
"Microsoft Edge,""Microsoft Corporation"",""20240309"",""122.0.2365.80"""
"Microsoft Edge Update,,,""1.3.185.21"""
"Microsoft Edge WebView2 Runtime,""Microsoft Corporation"",""20240310"",""122.0.2365.80"""
"STMicroelectronics STM32CubeIDE 1.14.1,""STMicroelectronics"",,""1.14.1"""
"WebStorm 2023.3.3,""JetBrains s.r.o."",,""233.14015.89"""
,,,
"Universal CRT Redistributable,""Microsoft Corporation"",""20240130"",""10.0.26624"""
"vs_FileTracker_Singleton,""Microsoft Corporation"",""20240130"",""16.10.31303"""
"HP Hotkey Support,""HP Inc."",""20240130"",""6.2.53.1"""
"Safe Exam Browser,""ETH Z?rich"",,""3.6.0.633"""
"Intel(R) Trusted Connect Services Client,""Intel Corporation"",,""1.65.245.0"""
"Microsoft Visual C++ 2015-2022 Redistributable (x64) - 14.38.33130,""Microsoft Corporation"",,""14.38.33130.0"""
"Microsoft Visual C++ 2015-2022 Redistributable (x86) - 14.38.33130,""Microsoft Corporation"",,""14.38.33130.0"""
"Python Launcher,""Python Software Foundation"",""20240130"",""3.12.1150.0"""
,,,
"Microsoft Visual C++ 2022 X86 Additional Runtime - 14.38.33130,""Microsoft Corporation"",""20240130"",""14.38.33130"""
"Microsoft Visual Studio Setup Configuration,""Microsoft Corporation"",""20240130"",""3.7.2182.35401"""
"Microsoft VC++ redistributables repacked.,""Intel Corporation"",""20240130"",""12.0.0.0"""
"vcpp_crt.redist.clickonce,""Microsoft Corporation"",""20240130"",""14.29.30153"""
"Intel(R) Trusted Connect Service Client x86,""Intel Corporation"",""20240130"",""1.65.245.0"""
"Microsoft Visual C++ 2019 X86 Debug Runtime - 14.29.30153,""Microsoft Corporation"",""20240130"",""14.29.30153"""
"Microsoft Visual C++ 2022 X86 Minimum Runtime - 14.38.33130,""Microsoft Corporation"",""20240130"",""14.38.33130"""
"Microsoft Visual Studio Setup WMI Provider,""Microsoft Corporation"",""20240130"",""3.7.2182.35401"""
"Intel(R) Chipset Device Software,""Intel(R) Corporation"",,""10.1.18243.8188"""
"STMicroelectronics stlink-server,""STMicroelectronics"",""20240305"",""2.1.1-1"""
'''


# Press the green button in the gutter to run the script.
if __name__ == '__main__':

    #Premiers essais avec l'api de mitre (inconcluant car il manque la clef d'autorisation)
    """
    # MITRE
    #r = requests.get('https://cveawg.mitre.org/api/health-check')



    #CVEAWG
    r = requests.get('https://cve.circl.lu/api/browse/microsoft')
    print(r)
    print(r.json())
    r = requests.get('https://cve.circl.lu/api/search/microsoft/office')
    r = requests.get('http://cvepremium.circl.lu/api/search/microsoft/excel')
    #r = requests.get('http://cve.circl.lu/api/cve/CVE-2010-3333')
    print(r)
    #print(r.json())
    print(r.text)
    print(type(r.text))
    print(len(r.json()))
    print(r.json().keys())
    #temp = pd.read_json(r.json()['results'])
    temp = pd.read_json(r.text)
    """

    '''
    r = requests.get('https://services.nvd.nist.gov/rest/json/cves/2.0?cveId=CVE-2019-1010218')
    print(r)
    print(r.json())
    '''


    '''
    value = 'https://services.nvd.nist.gov/rest/json/cves/2.0'
    value = 'https://services.nvd.nist.gov/rest/json/cves/2.0?cpeName=cpe:2.3:o:microsoft:windows_10:1607'
    r = requests.get(value)
    print(r)
    print(r.json())
    '''


    #Tests avec la librairie python mitrecve
    # cve_simple = crawler.get_main_page("word")
    value = 'Microsoft Edge'
    # cve_simple = crawler.get_main_page("Microsoft Visual C++ 2015-2022 Redistributable (x86) - 14.38.33130")
    cve_simple = crawler.get_main_page(value)
    pprint(cve_simple)
    # file = open("file.json", "w")
    # file.write(str(cve_simple))


    array = [x['ID'] for x in cve_simple.values()]
    print(array)
    print(len(array))

    #r = requests.get('https://services.nvd.nist.gov/rest/json/cves/2.0?cveId=CVE-2024-26246')
    #r = requests.get('https://services.nvd.nist.gov/rest/json/cves/1.0?cpeMatchString=cpe:2.3:a:microsoft:internet_explorer:11.0.9600:*:*:*:*:*:*:*?apiKey=9e36ae78-9e51-4d81-9523-353be63273eb')
    #r = requests.get('https://services.nvd.nist.gov/rest/v1/cve/CPE23:/a:microsoft:internet_explorer:11.0.9600:*:*:*:*:*:*:*?apiKey=9e36ae78-9e51-4d81-9523-353be63273eb')
    #r = requests.get('https://services.nvd.nist.gov/rest/v1/cve/CPE23:/a:microsoft:internet_explorer:11.0.9600:*:*:*:*:*:*:*?apiKey=9e36ae78-9e51-4d81-9523-353be63273eb')

    #r = requests.get('https://services.nvd.nist.gov/rest/json/cves/2.0?cpeName=cpe:2.3:o:microsoft:windows_10:1607:*:*:*:*:*:*:*')
    #r = requests.get('https://services.nvd.nist.gov/rest/json/cves/2.0?cpeName=cpe:2.3:a:microsoft:internet_explorer:8.0.6001:beta:*:*:*:*:*:*')
    r = requests.get('https://services.nvd.nist.gov/rest/json/cves/2.0?cpeName=cpe:2.3:a:adobe:acrobat_reader_dc:2021.001.20098:*:*:*:*:*:*:*')

    #CPE23:/a:microsoft:internet_explorer:11.0.9600:*:*:*:*:*:*:*
    print(r)
    pprint(r.text)
    print('--------')
    pprint(r.json())
    #print(r.json())

    print('-------------------------------------------------------------')



    #Commande complémentaire qui prend plus de temps à l'exécution.
    #pprint(crawler.get_cve_detail(cve_simple))

