import tkinter as tk
import tkinter.ttk as ttk
from POPOLE.Terminal import WindowsChamps1
from POPOLE.List_File import Fichier


class MENU:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("menu")
        self.root.geometry("640x480")

        # Create a style
        style = ttk.Style(self.root)

        # Import the tcl file
        self.root.tk.call("source", "forest-dark.tcl")

        # Set the theme with the theme_use method
        style.theme_use("forest-dark")

    def coco(self):
        file = Fichier()
        file.main()

    def boutton_principal(self):
        bouton_prin = tk.Button(self.root, text="SCAN", command=self.coco)
        bouton_prin.pack(padx=20, pady=20)

    def new_windows(self):
        win2 = tk.Toplevel(self.root)
        win2.title("affiche")
        win2.geometry("380x180")

    def momo(self):
        # Assuming cmd.run() is a method of WindowsChamps1
        cmd = WindowsChamps1()
        cmd.run()

    def create_menu(self):
        main_menu = tk.Menu(self.root)

        self.boutton_principal()  # bouton scan affiche une nouvelle page

        first_button = tk.Menu(main_menu, tearoff=0)
        first_button.add_command(label="Option 1", command=lambda: print("Option 1 selected"))
        first_button.add_command(label="Option 2", command=lambda: print("Option 2 selected"))

        second_button = tk.Menu(main_menu, tearoff=0)
        second_button.add_command(label="Option 3", command=lambda: print("Option 3 selected"))
        second_button.add_command(label="Option 4", command=lambda: print("Option 4 selected"))

        third_button = tk.Menu(main_menu, tearoff=0)
        third_button.add_command(label="Terminal", command=self.momo)

        fourth_button = tk.Menu(main_menu, tearoff=0)
        fourth_button.add_command(label="Option 7", command=lambda: print("Option 7 selected"))
        fourth_button.add_separator()
        fourth_button.add_command(label="Nouvelle fenetre", command=self.new_windows)

        main_menu.add_cascade(label="CVE", menu=first_button)
        main_menu.add_cascade(label="CSV", menu=second_button)
        main_menu.add_cascade(label="ANALYSE", menu=third_button)
        main_menu.add_cascade(label="WEB", menu=fourth_button)
        main_menu.add_command(label="QUIT", command=self.root.quit)

        self.root.config(menu=main_menu)
        self.root.mainloop()


if __name__ == "__main__":
    menu_instance = MENU()
    menu_instance.create_menu()
